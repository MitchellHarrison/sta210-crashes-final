---
title: "New York's Streetside Casualties"
subtitle: "An explanatory analysis of NYC car accidents"
author: "Drew LoPolito and Mitch Harrison"
format: 
  pdf:
    keep-tex: true
execute: 
  warning: false
  execute: false
  echo: false
---

# Introduction

## Instructions:

This section includes an introduction to the project motivation, data, and research question. Describe the data and definitions of key variables. It should also include some exploratory data analysis. All of the EDA won't fit in the paper, so focus on the EDA for the response variable and a few other interesting variables and relationships.

### Grading Criteria

The research question and motivation are clearly stated in the introduction, including citations for the data source and any external research. The data are clearly described, including a description about how the data were originally collected and a concise definition of the variables relevant to understanding the report. The data cleaning process is clearly described, including any decisions made in the process (e.g., creating new variables, removing observations, etc.) The explanatory data analysis helps the reader better understand the observations in the data along with interesting and relevant relationships between the variables. It incorporates appropriate visualizations and summary statistics.

## What we have:

## Dataset

Our dataset is composed of harvested and compiled data from New York City Police Department (NYPD) open access data on all police reported motor vehicle collisions (MVC) in all five boroughs of New York City from July 1st, 2012 through April 24th, 2023. The police report from which individual MVC observations in our dataset hail (MV104-AN) is required to be filled out for MVC where someone is injured or killed, or which result in at least \$1,000 of total property damage. Notably, only one MV104-AN form is filled out for all involved in an accident, meaning each observation in our dataset represents a unique MVC.

Our initial dataset contained approximately 1.9 million observations, found [here](https://www.kaggle.com/datasets/utkarshx27/motor-vehicle-collisions?resource=download). This was too large to push to git, so we sampled 10,000 observations from the dataset completely at random (code shown in Methods). The original dataset, as well as our randomly sampled dataset, contained data on crashes involving 1 to 5 motorists, however, 93% of crashes in the dataset occurred between 2 or fewer motorists (98% between 3 or fewer and 100% between 4 or fewer). Due to high levels of missingness in crashes with 3 or more motorists, as well as their low real-world frequency in New York City (where the kind of highway pile-ups which generate MVC with 3 or more motorists aren't generally observed), we decided to examine exclusively MVC between 2 or fewer motorists, which brought our total number of observations down to approximately 9,300.

We created a number of new variables by manipulating the dataset, as well as re-categorizing/cleaning some of the existing variables for practical use in modeling (for example, the original variables for factors contributing to the accident for each motorist and vehicle type of each motorist contained roughly 100 categories).

The following are the variables of interest from our dataset, with new or re-categorized variables noted:

`crash_date`: the date on which the MVC occurred.

`crash_day`: a categorical variable corresponding to the day of the week on which the MVC occurred, generated from the original `crash_date` variable.

`yday`: a numeric variable ranging from 1 to 365 corresponding to the numerical day of the year on which the MVC occurred.

`crash_time` the time (in 24-hr time) at which the MVC occurred.

`time_day`: a categorical variable with levels of "morning," "afternoon," "evening," and "night" corresponding to the time of day at which a MVC occurred. This variable was generated from the `crash_time` variable, with "morning" from 5 AM to 12 PM, "afternoon" from 12 PM to 5 PM, "evening" from 5 PM to 9 PM, and "night" from 9 PM to 5 AM.

`num_casualties`: a numeric variable corresponding to the number of casualties, i.e., injuries or fatalities, resulting from an MVC. This was generated from the original `number_of_persons_injured` and `number_of_persons_killed` variables.

`has_casualty`: a binary variable corresponding to whether or not a MVC resulted in at least one casualty.

`vtype1` and `vtype2`: categorical variables corresponding to the types of each vehicle (if applicable) involved in the crash, with categories of "Commercial vehicles," "Passenger vehicles," "Motorcycles," "Non-Motor Vehicle," and "Other/Unknown."

`factor1` and `factor2`: categorical variables corresponding any notable factors which were listed as potentially contributing to the crash (if applicable), with categories of "Aggressive/Reckless Driving," "Distraction/Inattention/Fatigue," "Failure to Obey Traffic Signs/Signals/Rules," "Impaired," "Other Technical/Mechanical Factors," and "Other/Unknown."

Our primary research question of interest is whether an accident having casualties or not depends on the type(s) of

## Read Data/Libraries

```{r}
#| label: import-libs
library(tidyverse)
library(tidymodels)
library(lubridate)
library(gt)
```

```{r}
#| label: read-data
crashes <- read_csv("data/crashes_10k.csv")
```

# Methodology
To explore the factors that lead to casualties in car accidents, we will
construct a binary logistic regression model. For the purposes of this analysis,
we define "casualties" as injuries or fatalities, not just fatalities. We are
only examining accidents involving two or fewer vehicles, which account for over
90% of accidents while avoiding the complexities involved with correcting for
several vehicle types at once.

We anticipate that the vehicle type involved in the accident will play a
significant role, but our dataset has over 100 individual vehicle types. To
simplify our model and avoid overfitting, we consolidated these into five larger
categories: passenger vehicles, commercial vehicles, motorcycles, non-motor
vehicles, and others/unknown. We also anticipated a significant impact on
accident severity by reason for the accident. Specifically, we wanted to
investigate impaired driving to other causes. Like the vehicle type, however, we
risked overfitting and over-complicating our model because of the sheer number 
of accident causes. Like our vehicle type variable, we consolidated accident
causes into five categories: impaired, distraction/inattention/fatigue,
aggressive/reckless driving, failure to obey traffic signs/signals/rules,
technical/mechanical failures, and other/unknown.

After consolidating categories, we investigate both the time of day and the day
of the year at which an accident occurred. Grouping by day of the week, we find
that the time at which injuries with casualties occur varies, with fewer
casualties around 5:00 pm and later at night during the weekend. Because of this
difference, we include both the time of day and weekday in our model.

The day of the year (as measured by the number of days after January 1st, i.e.,
"Julian Day") is also included. During exploratory analysis, we found that
accidents had disproportionately few casualties in the winter months and more
around the middle of the year. Because of this difference, we include the day of
the year as a predictor in our model.

We hoped to include the borough as a predictor but could not. So many
observations were missing a value for the borough that including it in our
complete-case model would have dropped a substantial portion of our overall
dataset. If we could confirm that the borough data was MCAR, then we wouldn't be
concerned about the final accuracy of our model. However, because we could not
verify the missingness mechanism (and due to the general rarity of MCAR data 
that isn't explicitly designed as such), we do not include the borough in which
the accident occurs in our model.

While we hoped that the zip code might provide valuable explanatory insight, we
found two issues with its inclusion in our model: first, there are 100 unique 
zip codes in the dataset. As a categorical variable, this would make our model
much more complex to calculate and communicate. Second, the proportion of
accidents with casualties is approximately normally distributed around a median
of 1.191. Therefore, specific zip codes are both unlikely to make an appreciable
difference in an explanatory model and are highly likely to increase its
complexity dramatically. Thus, we do not include zip code in our final model.

We also thought that some streets could have a disproportionately high casualty
rate and thereby have a statistically significant impact on our model. However,
we ran into many of the same problems that we did with zip codes. In the 10,000
observations we selected from the larger dataset, there were over 1000 unique
streets, many of which had minimal accidents. To combat these small number of
observations, we used LaPlace succession, adding one to each of the number of
accidents and making it a non-casualty accident. This technique allowed us to
correct for low accident counts. After applying LaPlace succession, we found 
that the large majority of streets had no casualties at all, and the remainder
were distributed around 0.25. Because of the massive complexity that adding a
1000-level categorical variable would add to our model, combined with an
unremarkable distribution of accident proportion after applying LaPlace
succession, we are not including streets as a predictor in our final model.

```{r}
#| label: clean-data
crashes <- crashes |>
  # remove accidents involving greater than 2 vehicles
  filter(is.na(contributing_factor_vehicle_3), is.na(vehicle_type_code_3)) |>
  
  select(!c(vehicle_type_code_3, vehicle_type_code_4, vehicle_type_code_5,
            contributing_factor_vehicle_3, contributing_factor_vehicle_4,
            contributing_factor_vehicle_5)) |>
  
  mutate(
    # add combined casualty column (injuries + fatalities)
    num_casualties = number_of_persons_killed + number_of_persons_injured,
    
    # add time of day categories
    time_day = case_when(
      hms(crash_time) > hm("5:00") & hms(crash_time) <= hm("12:00") ~
        "morning",
      hms(crash_time) > hm("12:00") & hms(crash_time) <= hm("17:00") ~
        "afternoon",
      hms(crash_time) > hm("17:00") & hms(crash_time) <= hm("21:00") ~
        "evening",
      hms(crash_time) > hm("21:00") | hms(crash_time) <= hm("5:00") ~
        "night"
    ) %>% 
      factor(levels = c("morning", "afternoon", "evening", "night")),
    
    # add ordinal column for injuries v. fatalities
    has_injury = number_of_persons_injured > 0,
    has_fatality = number_of_persons_killed >0,
    has_casualty = has_injury | has_fatality,
    severity = case_when(
      has_fatality ~ "fatal",
      has_injury ~ "injury",
      T ~ "no casualties"
    ),
    severity = factor(severity, levels = c("no casualties", "injury", "fatal")),
    
    # add Julian date column
    crash_date = as.Date(crash_date, format = "%m/%d/%Y"),
    crash_day = weekdays(crash_date, abbreviate = F),
    yday = yday(crash_date),
    
    # add column for weekend or weekday
    weekend_weekday = if_else(crash_day %in% c("Saturday", "Sunday"), 
                              "Weekend", "Weekday"),
    
    # make `crash_day` a factor rather than a character
    crash_day = as.factor(crash_day),
    
    # make `weekend_weekday` a factor rather than a character
    weekend_weekday = as.factor(weekend_weekday)

  )

```

```{r}
#| label: correct-vehicle-factor-categories
crashes <- crashes |>
  mutate(vehicle_type_code_2 = if_else(
    !is.na(contributing_factor_vehicle_2) & is.na(vehicle_type_code_2),
    "unk",
    vehicle_type_code_2
  ))

crashes <- crashes |> drop_na(vehicle_type_code_1)

ped_bike <- "Pedestrian/Bicyclist/Other Pedestrian Error/Confusion"
crashes <- crashes %>%
  mutate(across(starts_with("contributing_factor_vehicle"),
                ~ case_when(
                  . %in% c("Alcohol Involvement", "Drugs (Illegal)",
                           "Prescription Medication") ~ "Impaired",
                  . %in% c("Driver Inattention/Distraction", "Fatigued/Drowsy",
                           "Lost Consciousness", "Other Electronic Device",
                           "Outside Car Distraction", "Passenger Distraction")
                           ~ "Distraction/Inattention/Fatigue",
                  . %in% c("Following Too Closely", "Passing Too Closely",
                           "Unsafe Lane Changing",
                           "Unsafe Speed",
                           "Backing Unsafely") ~ "Aggressive/Reckless Driving",
                  . %in% c("Failure to Yield Right-of-Way",
                           ped_bike,
                           "Reaction to Other Uninvolved Vehicle",
                           "Reaction to Uninvolved Vehicle",
                           "Turning Improperly")
                           ~ "Failure to Obey Traffic Signs/Signals/Rules",
                  . %in% c("Lane Marking Improper/Inadequate",
                           "Obstruction/Debris", "Other Vehicular",
                           "Oversized Vehicle", "Pavement Defective",
                           "Pavement Slippery",
                           "Traffic Control Device Improper/Non-Working",
                           "Traffic Control Disregarded",
                           "View Obstructed/Limited")
                           ~ "Other Technical/Mechanical Factors",
                  TRUE ~ "Other/Unknown"
                )
  )) |>
  rename(factor1 = contributing_factor_vehicle_1, 
         factor2 = contributing_factor_vehicle_2)

crashes <- crashes %>%
  mutate(across(starts_with("vehicle_type_code_1"),
                ~ case_when(
                  . %in% c("2 dr sedan", "3-Door", "4 dr sedan", "4dsd",
                        "Convertible", "Sedan", "SEDONA",
                        "Station Wagon/Sport Utility Vehicle",
                        "SPORT UTILITY / STATION WAGON", "LIMO",
                        "LIVERY VEHICLE") ~ "Passenger vehicles",
                  . %in% c("AMBU", "AMBUL", "Ambulance", "AMBULANCE",
                        "AMBULETTE", "Armored Truck", "Beverage Truck",
                        "Box Truck", "Bulk Agriculture", "Bus", "BUS",
                        "Carry All", "Chassis Cab", "DELIV", "DELV",
                        "Dump", "FDNY", "Fire", "FIRE TRUCK", "FIRETRUCK",
                        "Flat Bed", "Flat Rack", "Garbage or Refuse",
                        "Hopper", "SMALL COM VEH(4 TIRES)",
                        "LARGE COM VEH(6 OR MORE TIRES)",
                        "Mack Truck",
                        "PICK-UP TRUCK", "PK", "Refrigerated Van", "schoo",
                        "SCHOO", "Snow Plow", "Tow Truck",
                        "Tow Truck / Wrecker", "TRACT",
                        "Tractor Truck Diesel", "Tractor Truck Gasoline",
                        "TRAIL", "TRAILER", "TRALI", "TRUCK",
                        "USPS", "UTIL", "Van", "VAN",
                        "VAN TRUCK") ~ "Commercial vehicles",
                  . %in% c("MOTOR SCOO", "Motorcycle",
                        "MOTORCYCLE", "Motorscooter", "SCOOTER", "Moped") ~ 
                    "Motorcycles",
                  . %in% c("E-Bike", "BICYCLE", "Bike", "E-Scooter") ~ 
                    "Non-Motor Vehicle",
                  . %in% c("FORK", "unk", "UNKNOWN", "OTHER") ~ "Other/Unknown",
                  TRUE ~ "Other/Unknown"
          ))) |>
      rename(vtype1 = vehicle_type_code_1)

crashes <- crashes %>%
  mutate(across(starts_with("vehicle_type_code_2"),
                ~ case_when(
                  . %in% c("2 dr sedan", "3-Door", "4 dr sedan", "4dsd",
                        "Convertible", "Sedan", "SEDONA",
                        "Station Wagon/Sport Utility Vehicle",
                        "SPORT UTILITY / STATION WAGON", "LIMO",
                        "LIVERY VEHICLE") ~ "Passenger vehicles",
                  . %in% c("AMBU", "AMBUL", "Ambulance", "AMBULANCE",
                        "AMBULETTE", "Armored Truck", "Beverage Truck",
                        "Box Truck", "Bulk Agriculture", "Bus", "BUS",
                        "Carry All", "Chassis Cab", "DELIV", "DELV",
                        "Dump", "FDNY", "Fire", "FIRE TRUCK", "FIRETRUCK",
                        "Flat Bed", "Flat Rack", "Garbage or Refuse",
                        "Hopper", "SMALL COM VEH(4 TIRES)",
                        "LARGE COM VEH(6 OR MORE TIRES)",
                        "Mack Truck",
                        "PICK-UP TRUCK", "PK", "Refrigerated Van", "schoo",
                        "SCHOO", "Snow Plow", "Tow Truck",
                        "Tow Truck / Wrecker", "TRACT",
                        "Tractor Truck Diesel", "Tractor Truck Gasoline",
                        "TRAIL", "TRAILER", "TRALI", "TRUCK",
                        "USPS", "UTIL", "Van", "VAN",
                        "VAN TRUCK") ~ "Commercial vehicles",
                  . %in% c("MOTOR SCOO", "Motorcycle",
                        "MOTORCYCLE", "Motorscooter", "SCOOTER", "Moped") ~ 
                    "Motorcycles",
                  . %in% c("E-Bike", "BICYCLE", "Bike", "E-Scooter") ~ 
                    "Non-Motor Vehicle",
                  . %in% c("FORK", "unk", "UNKNOWN", "OTHER") ~ "Other/Unknown",
                  TRUE ~ "None"
          ))) |>
      rename(vtype2 = vehicle_type_code_2)

# make `factor1`, `factor2`, `vtype1`, and `vtype2`, factors rather than a characters
crashes <- crashes %>%
  mutate(factor1 = as.factor(factor1),
         factor2 = as.factor(factor2),
         vtype1 = as.factor(vtype1),
         vtype2 = as.factor(vtype2))
```

## Exploratory Analysis

### Time of Day
```{r}
#| label: viz-time-density
#| fig-width: 7
crashes |>
  filter(num_casualties > 0) |>
  mutate(color = if_else(crash_day == "Sunday" | crash_day == "Saturday", 
         "red", "gray")) |>
  ggplot(aes(x = crash_time, group = crash_day)) +
  geom_density(color = "lightgray") +
  geom_density(
    data = filter(crashes, num_casualties > 0, 
                  crash_day == "Sunday" | crash_day == "Saturday"), 
    color = "red"
  ) +
  geom_vline(xintercept = hm("9:00"), linetype = 3) +
  geom_vline(xintercept = hm("17:00"), linetype = 3) +
  annotate("text", label = "9:00 am", color = "gray", angle = 90,
           x = hm("10:00"), y = 5e-06, hjust = "right", vjust = "bottom") +
  annotate("text", label = "5:00 pm", color = "gray", angle = 90,
           x = hm("16:30"), y = 5e-06, hjust = "right", vjust = "bottom") +
  annotate("text", color = "red", label = "Weekend", x = hm("00:20"), 
           hjust = "left", fontface = "bold", y = 8e-06) +
  annotate("text", color = "gray", label = "Mon. - Fri.", x = hm("00:20"), 
           hjust = "left", fontface = "bold", y = 1e-06) +
  scale_color_identity() +
  theme_classic() +
  labs(
    x = "Time of crash",
    y = "Density",
    title = "Weekend casualties are disproportionately in the early morning",
    subtitle = paste("Time density of NYC car accidents with injuries or",
                     "fatalities by day of week"),
    color = "Weekday"
  )
```

Of accidents with one or more casualties, those happening on Saturdays and Sundays appear to occur disproportionately late at night and with a notably smaller peak around 5:00 pm. While there is variance around the weekend, the general pattern stays the same between all seven days. To account for this, we will introduce a random effect based on the days of the week to allow information sharing between them. We anticipate that our model's performance will benefit from such a change, and this random effect will end up in the final model after performance evaluation.

### Day of the year
```{r}
#| label: viz-density-severity-day-of-year
#| fig-height: 3
crashes |>
  ggplot(aes(x = yday)) +
  geom_density(data = filter(crashes, severity == "no casualties"), 
               aes(group = severity), color = "lightgray") +
  geom_density(data = filter(crashes, severity == "injury"), color = "red") +
  annotate("text", color = "red", label = "Casualties", x = 27, y = 0.0019,
           fontface = "bold", hjust = "left") +
  annotate("text", color = "gray", label = "No casualties", x = 5, 
           y = 0.0029, fontface = "bold", hjust = "left") +
  theme_classic() +
  labs(
    x = "Day of the year",
    y = "Density",
    title = "Colder months have lower vehicular casualty proportion",
    subtitle = "NYC car accident density over all years by level of severity"
  )
```

The variance in density between levels of severity of accidents through all years is relatively low. However, we see disproportionately severe accidents around the late summer/early spring months and minor accidents in the early winter months. This difference is enough to include it as a potential predictor of interest in our final model.

### Borough

```{r}
#| label: viz-hist-by-street
#| include: false
crashes |>
  group_by(borough) |>
  summarise(count = n()) |>
  mutate(color = if_else(is.na(borough), "red", "lightgray")) |>
  ggplot(aes(x = borough, y = count, fill = color)) +
  geom_col() +
  scale_fill_identity() +
  theme_classic() +
  labs(
    x = NULL,
    y = "Count",
    title = "\"Missing\" is the biggest borough in NYC",
    subtitle = paste("Missingness of borough variable is too great to include",
                     "in the model")
  )
```

We have far too many missing values to include borough in our model. If we could verify that borough was Missing Completely At Random (MCAR), we could include it in our complete-case model. Still, unfortunately, we are unable to verify the missingness mechanism and are therefore uncomfortable with possible performance impacts by using borough in our final model.

### Zip codes

```{r}
#| label: viz-zip-code-box
#| fig-height: 2
zip_crash <- crashes |>
  group_by(zip_code) |>
  summarise(count = n(), casualties = sum(has_casualty)) |>
  mutate(prop = casualties / count)

zip_med <- median(zip_crash$prop)

zip_crash |>
  ggplot(aes(x = prop)) +
  geom_vline(xintercept = zip_med, linetype = 3) +
  annotate("text", label = "Median = 0.186", x = 0.2, y = 0.8, color = "gray",
           fontface = "bold", hjust = "left") +
  geom_boxplot(varwidth = T, fill = "red", alpha = 0.5) +
  ylim(-1,1) +
  labs(
    x = "Proportion of accidents with casualties",
    y = NULL,
    title = "Zip Code casualty rates are approximately normal",
    subtitle = "Distribution of NYC car accident casualty rates by zip code"
  ) +
  theme_classic() +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.line.y = element_blank()
  )
```
Building a box plot to observe the distribution of accident proportion by zip
code, we see that casualty rates are approximately normally distributed about a
median of 0.186. Because of the large absolute number of zip codes in the 
dataset and the unlikely impact of a normally distributed proportion having a
significant impact on the model, we will not use zip code as a predictor in the
final model.

### Streets

```{r}
#| label: viz-streets-hist
#| fig-height: 3
crashes |>
  group_by(on_street_name) |>
  summarise(count = n(), casualties = sum(has_casualty)) |>
  
  # apply LaPlace Succession here
  mutate(count = count+1, prop = casualties / count) |>
  
  ggplot(aes(x = prop)) +
  geom_histogram(bins = 20, fill = "red", alpha = 0.5, color = "black") +
  theme_classic() +
  labs(
    x = "Proportion of accidents with casualties",
    y = "Number of streets",
    title = "Most streets have no casualties",
    subtitle = "Distribution of NYC car accident casualty rates by street"
  )
```

After applying LaPlace succession, we see that the vast majority of accidents had no casualties, and most others were distributed around 0.25, with another peak around 0.5, partially due to the mathematical consequences of LaPlace succession. Because so many streets followed an unremarkable distribution and because adding street as a predictor would introduce massive model complexity, we will not use the street on which an accident occurs as a predictor in the final model.

# Methodology

## Instructions:

This section includes a brief description of your modeling process. Explain the reasoning for the type of model you're fitting, predictor variables considered for the model including any interactions. Additionally, show how you arrived at the final model by describing the model selection process, interactions considered, variable transformations (if needed), assessment of conditions and diagnostics, and any other relevant considerations that were part of the model fitting process.

### Grading criteria

The analysis steps are appropriate for the data and research question. The group used a thorough and careful approach to select the final model; the approach is clearly described in the report. The model selection process was reasonable, and addressed any violations in model conditions were discussed and/or fixed. The model conditions and diagnostics are thoroughly and accurately assessed for their model. If violations of model conditions are still present, there was a reasonable attempt to address the violations based on the course content.

## What we have:

To explore the factors that lead to casualties in car accidents, we will construct a binary logistic regression model. For the purposes of this analysis, we define "casualties" as injuries or fatalities, not just fatalities. We are only examining accidents involving two or fewer vehicles, which account for over 90% of accidents while avoiding the complexities involved with correcting for several vehicle types at once.

We anticipate that the vehicle type involved in the accident will play a significant role, but our dataset has over 100 individual vehicle types. To simplify our model and avoid overfitting, we consolidated these into five larger categories: passenger vehicles, commercial vehicles, motorcycles, non-motor vehicles, and others/unknown. We also anticipated a significant impact on accident severity by reason for the accident. Specifically, we wanted to investigate impaired driving to other causes. Like the vehicle type, however, we risked overfitting and over-complicating our model because of the sheer number of accident causes. Like our vehicle type variable, we consolidated accident causes into five categories: impaired, distraction/inattention/fatigue, aggressive/reckless driving, failure to obey traffic signs/signals/rules, technical/mechanical failures, and other/unknown.

After consolidating categories, we investigate both the time of day and the day of the year at which an accident occurred. Grouping by day of the week, we find that the time at which injuries with casualties occur varies, with fewer casualties around 5:00 pm and later at night during the weekend. Because of this difference, we include both the time of day and weekday in our model.

The day of the year (as measured by the number of days after January 1st, i.e., "Julian Day") is also included. During exploratory analysis, we found that accidents had disproportionately few casualties in the winter months and more around the middle of the year. Because of this difference, we include the day of the year as a predictor in our model.

We hoped to include the borough as a predictor but could not. So many observations were missing a value for the borough that including it in our complete-case model would have dropped a substantial portion of our overall dataset. If we could confirm that the borough data was MCAR, then we wouldn't be concerned about the final accuracy of our model. However, because we could not verify the missingness mechanism (and due to the general rarity of MCAR data that isn't explicitly designed as such), we do not include the borough in which the accident occurs in our model.

While we hoped that the zip code might provide valuable explanatory insight, we found two issues with its inclusion in our model: first, there are 100 unique zip codes in the dataset. As a categorical variable, this would make our model much more complex to calculate and communicate. Second, the proportion of accidents with casualties is approximately normally distributed around a median of 1.191. Therefore, specific zip codes are both unlikely to make an appreciable difference in an explanatory model and are highly likely to increase its complexity dramatically. Thus, we do not include zip code in our final model.

We also thought that some streets could have a disproportionately high casualty rate and thereby have a statistically significant impact on our model. However, we ran into many of the same problems that we did with zip codes. In the 10,000 observations we selected from the larger dataset, there were over 1000 unique streets, many of which had minimal accidents. To combat these small number of observations, we used LaPlace succession, adding one to each of the number of accidents and making it a non-casualty accident. This technique allowed us to correct for low accident counts. After applying LaPlace succession, we found that the large majority of streets had no casualties at all, and the remainder were distributed around 0.25. Because of the massive complexity that adding a 1000-level categorical variable would add to our model, combined with an unremarkable distribution of accident proportion after applying LaPlace succession, we are not including streets as a predictor in our final model.

# Results

## Instructions:

This is where you will output the final model with any relevant model fit statistics. Describe the key results from the model. The goal is not to interpret every single variable in the model but rather to show that you are proficient in using the model output to address the research questions, using the interpretations to support your conclusions. Focus on the variables that help you answer the research question and that provide relevant context for the reader.

### Grading Criteria

The model fit is clearly assessed, and interesting findings from the model are clearly described. Interpretations of model coefficients are used to support the key findings and conclusions, rather than merely listing the interpretation of every model coefficient. If the primary modeling objective is prediction, the model's predictive power is thoroughly assessed.

## What we have

```{r}
#| label: construct-model
model1 <- glm(has_casualty ~ yday + time_day + weekend_weekday +
                weekend_weekday * time_day + factor1 + vtype1 + factor2 + 
                vtype2, 
              data = crashes, family = "binomial")

model2 <- glm(has_casualty ~ yday + time_day + weekend_weekday +
                factor1 + vtype1 + factor2 + vtype2, 
              data = crashes, family = "binomial")
```

```{r}
#| label: display-model-output-table
out <- tidy(model1)
form_out <- out |>
  filter(p.value <= .05) |>
  mutate(term = str_replace_all(term, "time_day", "Time of Day: "),
         term = str_replace_all(term, "crash_day", "Weekday: "),
         term = str_replace_all(term, "factor1", "Factor 1: "),
         term = str_replace_all(term, "factor2", "Factor 2: "),
         term = str_replace_all(term, "vtype1", "Vehicle 1: "),
         term = str_replace_all(term, "vtype2", "Vehicle 2: "),
         term = str_replace(term, "yday", "Day of the Year")) |>
  rename(Predictor = term, Coefficient = estimate, `Standard Error` = std.error,
         Statistic = statistic, `P-value` = p.value)

form_out |>
  gt() |>
  fmt_number(columns = c(Coefficient, `Standard Error`, Statistic, `P-value`),
             decimals = 3, suffix = T) |>
  fmt_scientific(columns = !Predictor) |>
  gtsave("table1.pdf")
```

![Model Output](table1.pdf)

# Discussion

## Instructions:

In this section you'll include a summary of what you have learned about your research question along with statistical arguments supporting your conclusions. In addition, discuss the limitations of your analysis and provide suggestions on ways the analysis could be improved. Any potential issues pertaining to the reliability and validity of your data and appropriateness of the statistical analysis should also be discussed here. Lastly, this section will include ideas for future work.

### Grading criteria

Overall conclusions from analysis are clearly described, and the model results are put into the larger context of the subject matter and original research question. There is thoughtful consideration of potential limitations of the data and/or analysis, and ideas for future work are clearly described.

## What we have
